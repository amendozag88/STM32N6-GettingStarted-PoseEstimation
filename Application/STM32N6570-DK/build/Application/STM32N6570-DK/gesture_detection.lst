ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 1


   1              		.arch armv8.1-m.main
   2              		.fpu fpv5-d16
   3              		.arch_extension dsp
   4              		.arch_extension fp
   5              		.arch_extension fp.dp
   6              		.arch_extension mve
   7              		.arch_extension mve.fp
   8              		.eabi_attribute 5, "cortex-m55"
   9              		.eabi_attribute 28, 1
  10              		.eabi_attribute 20, 1
  11              		.eabi_attribute 21, 1
  12              		.eabi_attribute 23, 3
  13              		.eabi_attribute 24, 1
  14              		.eabi_attribute 25, 1
  15              		.eabi_attribute 26, 1
  16              		.eabi_attribute 30, 4
  17              		.eabi_attribute 34, 1
  18              		.eabi_attribute 38, 1
  19              		.eabi_attribute 18, 4
  20              		.file	"gesture_detection.c"
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.file 1 "Src/gesture_detection.c"
  25              		.section	.text.Gesture_Init,"ax",%progbits
  26              		.align	1
  27              		.global	Gesture_Init
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	Gesture_Init:
  33              	.LVL0:
  34              	.LFB3339:
   1:Src/gesture_detection.c **** /**
   2:Src/gesture_detection.c ****  ******************************************************************************
   3:Src/gesture_detection.c ****  * @file    gesture_detection.c
   4:Src/gesture_detection.c ****  * @author  Your Name
   5:Src/gesture_detection.c ****  * @brief   Gesture detection implementation
   6:Src/gesture_detection.c ****  ******************************************************************************
   7:Src/gesture_detection.c ****  */
   8:Src/gesture_detection.c **** 
   9:Src/gesture_detection.c **** #include "gesture_detection.h"
  10:Src/gesture_detection.c **** #include "main.h"
  11:Src/gesture_detection.c **** #include "display_spe.h"
  12:Src/gesture_detection.c **** #include <math.h>
  13:Src/gesture_detection.c **** #include <string.h>
  14:Src/gesture_detection.c **** 
  15:Src/gesture_detection.c **** 
  16:Src/gesture_detection.c **** void Gesture_Init(GestureDetector_t *detector)
  17:Src/gesture_detection.c **** {
  35              		.loc 1 17 1 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		@ link register save eliminated.
  18:Src/gesture_detection.c ****     memset(detector, 0, sizeof(GestureDetector_t));
  40              		.loc 1 18 5 view .LVU1
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 2


  41 0000 42F29002 		movw	r2, #8336
  42 0004 0021     		movs	r1, #0
  43 0006 FFF7FEBF 		b	memset
  44              	.LVL1:
  45              		.loc 1 18 5 is_stmt 0 view .LVU2
  46              		.cfi_endproc
  47              	.LFE3339:
  49              		.section	.text.Gesture_CalculateDistance,"ax",%progbits
  50              		.align	1
  51              		.global	Gesture_CalculateDistance
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  56              	Gesture_CalculateDistance:
  57              	.LVL2:
  58              	.LFB3340:
  19:Src/gesture_detection.c ****     detector->last_detected_gesture = GESTURE_NONE;
  20:Src/gesture_detection.c ****     detector->current_display_gesture = GESTURE_NONE;
  21:Src/gesture_detection.c ****     detector->gesture_display_timeout = 0;
  22:Src/gesture_detection.c **** }
  23:Src/gesture_detection.c **** 
  24:Src/gesture_detection.c **** float32_t Gesture_CalculateDistance(float32_t x1, float32_t y1, float32_t x2, float32_t y2)
  25:Src/gesture_detection.c **** {
  59              		.loc 1 25 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  26:Src/gesture_detection.c ****     float32_t dx = x2 - x1;
  64              		.loc 1 26 5 view .LVU4
  65              		.loc 1 26 15 is_stmt 0 view .LVU5
  66 0000 31EE401A 		vsub.f32	s2, s2, s0
  67              	.LVL3:
  27:Src/gesture_detection.c ****     float32_t dy = y2 - y1;
  68              		.loc 1 27 5 is_stmt 1 view .LVU6
  69              		.loc 1 27 15 is_stmt 0 view .LVU7
  70 0004 31EEE00A 		vsub.f32	s0, s3, s1
  71              	.LVL4:
  28:Src/gesture_detection.c ****     return sqrtf(dx * dx + dy * dy);
  72              		.loc 1 28 5 is_stmt 1 view .LVU8
  73              		.loc 1 28 31 is_stmt 0 view .LVU9
  74 0008 20EE000A 		vmul.f32	s0, s0, s0
  75              	.LVL5:
  76              		.loc 1 28 12 view .LVU10
  77 000c A1EE010A 		vfma.f32	s0, s2, s2
  78 0010 FFF7FEBF 		b	sqrtf
  79              	.LVL6:
  80              		.loc 1 28 12 view .LVU11
  81              		.cfi_endproc
  82              	.LFE3340:
  84              		.section	.text.Gesture_CalculateSpeed,"ax",%progbits
  85              		.align	1
  86              		.global	Gesture_CalculateSpeed
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	Gesture_CalculateSpeed:
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 3


  92              	.LVL7:
  93              	.LFB3341:
  29:Src/gesture_detection.c **** }
  30:Src/gesture_detection.c **** 
  31:Src/gesture_detection.c **** float32_t Gesture_CalculateSpeed(KeypointHistory_t *history, uint8_t current_idx, uint8_t frames_ba
  32:Src/gesture_detection.c **** {
  94              		.loc 1 32 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  33:Src/gesture_detection.c ****     if (frames_back >= GESTURE_HISTORY_SIZE) return 0.0f;
  98              		.loc 1 33 5 view .LVU13
  99              		.loc 1 33 8 is_stmt 0 view .LVU14
 100 0000 272A     		cmp	r2, #39
  32:Src/gesture_detection.c ****     if (frames_back >= GESTURE_HISTORY_SIZE) return 0.0f;
 101              		.loc 1 32 1 view .LVU15
 102 0002 38B5     		push	{r3, r4, r5, lr}
 103              		.cfi_def_cfa_offset 16
 104              		.cfi_offset 3, -16
 105              		.cfi_offset 4, -12
 106              		.cfi_offset 5, -8
 107              		.cfi_offset 14, -4
 108              		.loc 1 33 8 view .LVU16
 109 0004 02D9     		bls	.L4
 110              	.LVL8:
 111              	.L6:
 112              		.loc 1 33 53 discriminator 1 view .LVU17
 113 0006 9FED140A 		vldr.32	s0, .L10
 114              	.L3:
  34:Src/gesture_detection.c **** 
  35:Src/gesture_detection.c ****     uint8_t prev_idx = (current_idx - frames_back + GESTURE_HISTORY_SIZE) % GESTURE_HISTORY_SIZE;
  36:Src/gesture_detection.c **** 
  37:Src/gesture_detection.c ****     float32_t distance = Gesture_CalculateDistance(
  38:Src/gesture_detection.c ****         history[prev_idx].x, history[prev_idx].y,
  39:Src/gesture_detection.c ****         history[current_idx].x, history[current_idx].y
  40:Src/gesture_detection.c ****     );
  41:Src/gesture_detection.c **** 
  42:Src/gesture_detection.c ****     uint32_t time_diff = history[current_idx].timestamp - history[prev_idx].timestamp;
  43:Src/gesture_detection.c ****     if (time_diff == 0) return 0.0f;
  44:Src/gesture_detection.c **** 
  45:Src/gesture_detection.c ****     return distance / (time_diff / 1000.0f); // Speed per second
  46:Src/gesture_detection.c **** }
 115              		.loc 1 46 1 view .LVU18
 116 000a 38BD     		pop	{r3, r4, r5, pc}
 117              	.LVL9:
 118              	.L4:
  35:Src/gesture_detection.c **** 
 119              		.loc 1 35 5 is_stmt 1 view .LVU19
  37:Src/gesture_detection.c ****         history[prev_idx].x, history[prev_idx].y,
 120              		.loc 1 37 5 view .LVU20
  35:Src/gesture_detection.c **** 
 121              		.loc 1 35 75 is_stmt 0 view .LVU21
 122 000c 2823     		movs	r3, #40
  35:Src/gesture_detection.c **** 
 123              		.loc 1 35 37 view .LVU22
 124 000e 8C1A     		subs	r4, r1, r2
  35:Src/gesture_detection.c **** 
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 4


 125              		.loc 1 35 51 view .LVU23
 126 0010 2834     		adds	r4, r4, #40
  35:Src/gesture_detection.c **** 
 127              		.loc 1 35 75 view .LVU24
 128 0012 B4FBF3F2 		udiv	r2, r4, r3
 129              	.LVL10:
  35:Src/gesture_detection.c **** 
 130              		.loc 1 35 75 view .LVU25
 131 0016 03FB1244 		mls	r4, r3, r2, r4
  39:Src/gesture_detection.c ****     );
 132              		.loc 1 39 16 view .LVU26
 133 001a 00EB0115 		add	r5, r0, r1, lsl #4
  38:Src/gesture_detection.c ****         history[current_idx].x, history[current_idx].y
 134              		.loc 1 38 16 view .LVU27
 135 001e 00EB0414 		add	r4, r0, r4, lsl #4
  37:Src/gesture_detection.c ****         history[prev_idx].x, history[prev_idx].y,
 136              		.loc 1 37 26 view .LVU28
 137 0022 D5ED011A 		vldr.32	s3, [r5, #4]
 138 0026 95ED001A 		vldr.32	s2, [r5]
 139 002a D4ED010A 		vldr.32	s1, [r4, #4]
 140 002e 94ED000A 		vldr.32	s0, [r4]
 141 0032 FFF7FEFF 		bl	Gesture_CalculateDistance
 142              	.LVL11:
  42:Src/gesture_detection.c ****     if (time_diff == 0) return 0.0f;
 143              		.loc 1 42 14 view .LVU29
 144 0036 EB68     		ldr	r3, [r5, #12]
 145 0038 E268     		ldr	r2, [r4, #12]
  37:Src/gesture_detection.c ****         history[prev_idx].x, history[prev_idx].y,
 146              		.loc 1 37 26 view .LVU30
 147 003a B0EE407A 		vmov.f32	s14, s0
 148              	.LVL12:
  42:Src/gesture_detection.c ****     if (time_diff == 0) return 0.0f;
 149              		.loc 1 42 5 is_stmt 1 view .LVU31
  43:Src/gesture_detection.c **** 
 150              		.loc 1 43 5 view .LVU32
  43:Src/gesture_detection.c **** 
 151              		.loc 1 43 8 is_stmt 0 view .LVU33
 152 003e 9B1A     		subs	r3, r3, r2
 153              	.LVL13:
  43:Src/gesture_detection.c **** 
 154              		.loc 1 43 8 view .LVU34
 155 0040 E1D0     		beq	.L6
  45:Src/gesture_detection.c **** }
 156              		.loc 1 45 5 is_stmt 1 view .LVU35
  45:Src/gesture_detection.c **** }
 157              		.loc 1 45 34 is_stmt 0 view .LVU36
 158 0042 07EE903A 		vmov	s15, r3	@ int
 159 0046 9FED056A 		vldr.32	s12, .L10+4
 160 004a F8EE677A 		vcvt.f32.u32	s15, s15
 161 004e C7EE866A 		vdiv.f32	s13, s15, s12
  45:Src/gesture_detection.c **** }
 162              		.loc 1 45 21 view .LVU37
 163 0052 87EE260A 		vdiv.f32	s0, s14, s13
 164              	.LVL14:
  45:Src/gesture_detection.c **** }
 165              		.loc 1 45 21 view .LVU38
 166 0056 D8E7     		b	.L3
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 5


 167              	.L11:
 168              		.align	2
 169              	.L10:
 170 0058 00000000 		.word	0
 171 005c 00007A44 		.word	1148846080
 172              		.cfi_endproc
 173              	.LFE3341:
 175              		.section	.rodata.Gesture_Detect.str1.1,"aMS",%progbits,1
 176              	.LC0:
 177 0000 6964783A 		.ascii	"idx:%d/%d,w_dx: %.3f, w_sp: %.3f\000"
 177      25642F25 
 177      642C775F 
 177      64783A20 
 177      252E3366 
 178              		.section	.text.Gesture_Detect,"ax",%progbits
 179              		.align	1
 180              		.global	Gesture_Detect
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 185              	Gesture_Detect:
 186              	.LVL15:
 187              	.LFB3344:
  47:Src/gesture_detection.c **** 
  48:Src/gesture_detection.c **** static GestureType_t Detect_ArmSwipe(GestureDetector_t *detector, spe_pp_outBuffer_t *keypoints)
  49:Src/gesture_detection.c **** {
  50:Src/gesture_detection.c ****     uint8_t curr_idx = detector->history_index;
  51:Src/gesture_detection.c ****     uint8_t prev_idx = (curr_idx - 4 + GESTURE_HISTORY_SIZE) % GESTURE_HISTORY_SIZE;
  52:Src/gesture_detection.c **** 
  53:Src/gesture_detection.c ****     /***** Right now I am deactivating the right arm swipe, so that is not confounded with the swor
  54:Src/gesture_detection.c ****     /*
  55:Src/gesture_detection.c ****     	// Check right arm swipe
  56:Src/gesture_detection.c ****     KeypointHistory_t *right_wrist = detector->history[KEYPOINT_RIGHT_WRIST];
  57:Src/gesture_detection.c ****     KeypointHistory_t *right_shoulder = detector->history[KEYPOINT_RIGHT_SHOULDER];
  58:Src/gesture_detection.c **** 
  59:Src/gesture_detection.c ****     if (right_wrist[curr_idx].confidence > MIN_CONFIDENCE
  60:Src/gesture_detection.c ****     		//&& right_shoulder[curr_idx].confidence > MIN_CONFIDENCE
  61:Src/gesture_detection.c **** 		) {
  62:Src/gesture_detection.c **** 
  63:Src/gesture_detection.c ****         // Calculate horizontal movement of wrist
  64:Src/gesture_detection.c ****         float32_t wrist_dx = right_wrist[curr_idx].x - right_wrist[prev_idx].x;
  65:Src/gesture_detection.c ****         float32_t wrist_speed = Gesture_CalculateSpeed(right_wrist, curr_idx, 3);
  66:Src/gesture_detection.c ****         float32_t current_x_pos= right_wrist[curr_idx].x;
  67:Src/gesture_detection.c **** 		float32_t prev_x_pos = right_wrist[prev_idx].x;
  68:Src/gesture_detection.c **** //	  UTIL_LCD_SetBackColor(0x40000000);
  69:Src/gesture_detection.c **** //        UTIL_LCDEx_PrintfAt(0, LINE(13), CENTER_MODE, "curr_x %.3f, prev_x: %.3f", current_x_pos,
  70:Src/gesture_detection.c **** //        UTIL_LCDEx_PrintfAt(0, LINE(14), CENTER_MODE, "n_dx: %.3f, n_sp: %.3f", wrist_dx, wrist_s
  71:Src/gesture_detection.c **** //        UTIL_LCD_SetBackColor(0);
  72:Src/gesture_detection.c **** 
  73:Src/gesture_detection.c ****         // Check if wrist is moving significantly horizontally
  74:Src/gesture_detection.c ****         if (fabsf(wrist_dx) > 0.05f && wrist_speed > SWIPE_MIN_SPEED) {
  75:Src/gesture_detection.c ****             // Check if arm is extended (wrist far from shoulder)
  76:Src/gesture_detection.c ****         //    float32_t arm_extension = Gesture_CalculateDistance(
  77:Src/gesture_detection.c ****         //        right_wrist[curr_idx].x, right_wrist[curr_idx].y,
  78:Src/gesture_detection.c ****        //         right_shoulder[curr_idx].x, right_shoulder[curr_idx].y
  79:Src/gesture_detection.c ****        //     );
  80:Src/gesture_detection.c **** 
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 6


  81:Src/gesture_detection.c ****         //    if (arm_extension > 0.2f) { // Arm is extended
  82:Src/gesture_detection.c ****                 if (wrist_dx > 0) {
  83:Src/gesture_detection.c ****                     return GESTURE_RIGHT_ARM_SWIPE_RIGHT;
  84:Src/gesture_detection.c ****                 } else {
  85:Src/gesture_detection.c ****                     return GESTURE_RIGHT_ARM_SWIPE_LEFT;
  86:Src/gesture_detection.c ****                 }
  87:Src/gesture_detection.c ****             //}
  88:Src/gesture_detection.c ****         }
  89:Src/gesture_detection.c ****     }
  90:Src/gesture_detection.c ****     */
  91:Src/gesture_detection.c **** 
  92:Src/gesture_detection.c ****     // Check left arm swipe (similar logic)
  93:Src/gesture_detection.c ****     KeypointHistory_t *left_wrist = detector->history[KEYPOINT_LEFT_WRIST];
  94:Src/gesture_detection.c ****     KeypointHistory_t *left_shoulder = detector->history[KEYPOINT_LEFT_SHOULDER];
  95:Src/gesture_detection.c **** 
  96:Src/gesture_detection.c ****     if (left_wrist[curr_idx].confidence > MIN_CONFIDENCE
  97:Src/gesture_detection.c ****     	//	&&  left_shoulder[curr_idx].confidence > MIN_CONFIDENCE
  98:Src/gesture_detection.c **** 			) {
  99:Src/gesture_detection.c **** 
 100:Src/gesture_detection.c ****         float32_t wrist_dx = left_wrist[curr_idx].x - left_wrist[prev_idx].x;
 101:Src/gesture_detection.c ****         float32_t wrist_speed = Gesture_CalculateSpeed(left_wrist, curr_idx, 3);
 102:Src/gesture_detection.c ****         UTIL_LCDEx_PrintfAt(0, LINE(15), CENTER_MODE, "idx:%d/%d,w_dx: %.3f, w_sp: %.3f", prev_idx,
 103:Src/gesture_detection.c ****         if (fabsf(wrist_dx) > 0.05f && wrist_speed > SWIPE_MIN_SPEED) {
 104:Src/gesture_detection.c ****         //    float32_t arm_extension = Gesture_CalculateDistance(
 105:Src/gesture_detection.c ****          //       left_wrist[curr_idx].x, left_wrist[curr_idx].y,
 106:Src/gesture_detection.c ****         //        left_shoulder[curr_idx].x, left_shoulder[curr_idx].y
 107:Src/gesture_detection.c ****         //    );
 108:Src/gesture_detection.c **** 
 109:Src/gesture_detection.c ****         //    if (arm_extension > 0.2f) {
 110:Src/gesture_detection.c ****                 if (wrist_dx > 0) {
 111:Src/gesture_detection.c ****                     return GESTURE_LEFT_ARM_SWIPE_RIGHT;
 112:Src/gesture_detection.c ****                 } else {
 113:Src/gesture_detection.c ****                     return GESTURE_LEFT_ARM_SWIPE_LEFT;
 114:Src/gesture_detection.c ****                 }
 115:Src/gesture_detection.c ****           //  }
 116:Src/gesture_detection.c ****         }
 117:Src/gesture_detection.c ****     }
 118:Src/gesture_detection.c **** 
 119:Src/gesture_detection.c ****     return GESTURE_NONE;
 120:Src/gesture_detection.c **** }
 121:Src/gesture_detection.c **** 
 122:Src/gesture_detection.c **** static GestureType_t Detect_SwordGestures(GestureDetector_t *detector, spe_pp_outBuffer_t *keypoint
 123:Src/gesture_detection.c **** {
 124:Src/gesture_detection.c ****     uint8_t curr_idx = detector->history_index;
 125:Src/gesture_detection.c **** 
 126:Src/gesture_detection.c ****     KeypointHistory_t *right_wrist = detector->history[KEYPOINT_RIGHT_WRIST];
 127:Src/gesture_detection.c ****     KeypointHistory_t *right_shoulder = detector->history[KEYPOINT_RIGHT_SHOULDER];
 128:Src/gesture_detection.c ****     KeypointHistory_t *right_elbow = detector->history[KEYPOINT_RIGHT_ELBOW];
 129:Src/gesture_detection.c ****     KeypointHistory_t *nose = detector->history[KEYPOINT_NOSE];
 130:Src/gesture_detection.c **** 
 131:Src/gesture_detection.c ****     if (right_wrist[curr_idx].confidence < MIN_CONFIDENCE ||
 132:Src/gesture_detection.c ****         right_shoulder[curr_idx].confidence < MIN_CONFIDENCE ||
 133:Src/gesture_detection.c ****         right_elbow[curr_idx].confidence < MIN_CONFIDENCE) {
 134:Src/gesture_detection.c ****         return GESTURE_NONE;
 135:Src/gesture_detection.c ****     }
 136:Src/gesture_detection.c **** 
 137:Src/gesture_detection.c ****     // Overhead strike: Check if hand moves from high to low rapidly
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 7


 138:Src/gesture_detection.c ****     if (curr_idx >= 12) { // Need some history
 139:Src/gesture_detection.c ****         uint8_t start_idx = (curr_idx - 12 + GESTURE_HISTORY_SIZE) % GESTURE_HISTORY_SIZE;
 140:Src/gesture_detection.c **** 
 141:Src/gesture_detection.c ****         float32_t start_y = right_wrist[start_idx].y;
 142:Src/gesture_detection.c ****         float32_t curr_y = right_wrist[curr_idx].y;
 143:Src/gesture_detection.c ****         float32_t vertical_movement = curr_y - start_y;
 144:Src/gesture_detection.c ****         float32_t start_nose = nose[start_idx].y;
 145:Src/gesture_detection.c **** 
 146:Src/gesture_detection.c ****         // Check if hand started anove the nose and moved down quickly
 147:Src/gesture_detection.c ****         if (start_y < start_nose && vertical_movement > 0.25f) { // Started high, moved down
 148:Src/gesture_detection.c ****             float32_t speed = Gesture_CalculateSpeed(right_wrist, curr_idx, 5);
 149:Src/gesture_detection.c ****             if (speed > SWIPE_MIN_SPEED * 1.5f) {
 150:Src/gesture_detection.c ****                 return GESTURE_SWORD_OVERHEAD_STRIKE;
 151:Src/gesture_detection.c ****             }
 152:Src/gesture_detection.c ****         }
 153:Src/gesture_detection.c ****     }
 154:Src/gesture_detection.c **** 
 155:Src/gesture_detection.c ****     // Side slash: Check for horizontal movement with extended arm
 156:Src/gesture_detection.c ****     if (curr_idx >= 12) {
 157:Src/gesture_detection.c ****         uint8_t start_idx = (curr_idx - 12 + GESTURE_HISTORY_SIZE) % GESTURE_HISTORY_SIZE;
 158:Src/gesture_detection.c **** 
 159:Src/gesture_detection.c ****         float32_t horizontal_movement = fabsf(right_wrist[curr_idx].x - right_wrist[start_idx].x);
 160:Src/gesture_detection.c ****         float32_t arm_extension = Gesture_CalculateDistance(
 161:Src/gesture_detection.c ****             right_wrist[curr_idx].x, right_wrist[curr_idx].y,
 162:Src/gesture_detection.c ****             right_shoulder[curr_idx].x, right_shoulder[curr_idx].y
 163:Src/gesture_detection.c ****         );
 164:Src/gesture_detection.c **** 
 165:Src/gesture_detection.c ****         if (horizontal_movement > 0.2f && arm_extension > 0.25f) {
 166:Src/gesture_detection.c ****             float32_t speed = Gesture_CalculateSpeed(right_wrist, curr_idx, 3);
 167:Src/gesture_detection.c ****             if (speed > SWIPE_MIN_SPEED) {
 168:Src/gesture_detection.c ****                 return GESTURE_SWORD_SIDE_SLASH;
 169:Src/gesture_detection.c ****             }
 170:Src/gesture_detection.c ****         }
 171:Src/gesture_detection.c ****     }
 172:Src/gesture_detection.c **** 
 173:Src/gesture_detection.c ****     return GESTURE_NONE;
 174:Src/gesture_detection.c **** }
 175:Src/gesture_detection.c **** 
 176:Src/gesture_detection.c **** GestureType_t Gesture_Detect(GestureDetector_t *detector, spe_pp_outBuffer_t *keypoints)
 177:Src/gesture_detection.c **** {
 188              		.loc 1 177 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 177 1 is_stmt 0 view .LVU40
 193 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 194              		.cfi_def_cfa_offset 36
 195              		.cfi_offset 4, -36
 196              		.cfi_offset 5, -32
 197              		.cfi_offset 6, -28
 198              		.cfi_offset 7, -24
 199              		.cfi_offset 8, -20
 200              		.cfi_offset 9, -16
 201              		.cfi_offset 10, -12
 202              		.cfi_offset 11, -8
 203              		.cfi_offset 14, -4
 204 0004 2DED048B 		vpush.64	{d8, d9}
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 8


 205              		.cfi_def_cfa_offset 52
 206              		.cfi_offset 80, -52
 207              		.cfi_offset 81, -48
 208              		.cfi_offset 82, -44
 209              		.cfi_offset 83, -40
 210 0008 0646     		mov	r6, r0
 178:Src/gesture_detection.c ****     uint32_t current_time = HAL_GetTick();
 211              		.loc 1 178 5 is_stmt 1 view .LVU41
 177:Src/gesture_detection.c ****     uint32_t current_time = HAL_GetTick();
 212              		.loc 1 177 1 is_stmt 0 view .LVU42
 213 000a 85B0     		sub	sp, sp, #20
 214              		.cfi_def_cfa_offset 72
 177:Src/gesture_detection.c ****     uint32_t current_time = HAL_GetTick();
 215              		.loc 1 177 1 view .LVU43
 216 000c 8846     		mov	r8, r1
 217              		.loc 1 178 29 view .LVU44
 218 000e FFF7FEFF 		bl	HAL_GetTick
 219              	.LVL16:
 179:Src/gesture_detection.c **** 
 180:Src/gesture_detection.c ****     // Advance history index
 181:Src/gesture_detection.c ****     detector->history_index = (detector->history_index + 1) % GESTURE_HISTORY_SIZE;
 220              		.loc 1 181 61 view .LVU45
 221 0012 2823     		movs	r3, #40
 222              		.loc 1 181 40 view .LVU46
 223 0014 06F50057 		add	r7, r6, #8192
 224 0018 97F88050 		ldrb	r5, [r7, #128]	@ zero_extendqisi2
 225 001c 4FF00D0E 		mov	lr, #13
 226              		.loc 1 181 56 view .LVU47
 227 0020 0135     		adds	r5, r5, #1
 228              		.loc 1 181 61 view .LVU48
 229 0022 B5FBF3F2 		udiv	r2, r5, r3
 230 0026 03FB1255 		mls	r5, r3, r2, r5
 231 002a 06EB0513 		add	r3, r6, r5, lsl #4
 178:Src/gesture_detection.c **** 
 232              		.loc 1 178 29 view .LVU49
 233 002e 0446     		mov	r4, r0
 234              	.LVL17:
 235              		.loc 1 181 5 is_stmt 1 view .LVU50
 236 0030 1A46     		mov	r2, r3
 237 0032 4EF001E0 		dls	lr, lr
 238              		.loc 1 181 29 is_stmt 0 view .LVU51
 239 0036 5FFA85F9 		uxtb	r9, r5
 240 003a 4146     		mov	r1, r8
 241 003c 87F88090 		strb	r9, [r7, #128]
 182:Src/gesture_detection.c **** 
 183:Src/gesture_detection.c **** 
 184:Src/gesture_detection.c ****     // Update history with current keypoints
 185:Src/gesture_detection.c ****     for (int i = 0; i < AI_POSE_PP_POSE_KEYPOINTS_NB; i++) {
 242              		.loc 1 185 5 is_stmt 1 view .LVU52
 243              	.LBB17:
 244              		.loc 1 185 10 view .LVU53
 245              	.LVL18:
 246              		.loc 1 185 23 discriminator 1 view .LVU54
 247 0040 4FEA0518 		lsl	r8, r5, #4
 248              	.LVL19:
 249              	.L13:
 186:Src/gesture_detection.c ****         detector->history[i][detector->history_index].x = keypoints[i].x_center;
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 9


 250              		.loc 1 186 9 view .LVU55
 251              		.loc 1 186 71 is_stmt 0 view .LVU56
 252 0044 0868     		ldr	r0, [r1]	@ float
 185:Src/gesture_detection.c ****         detector->history[i][detector->history_index].x = keypoints[i].x_center;
 253              		.loc 1 185 23 discriminator 1 view .LVU57
 254 0046 0C31     		adds	r1, r1, #12
 255              		.loc 1 186 57 view .LVU58
 256 0048 1860     		str	r0, [r3]	@ float
 187:Src/gesture_detection.c ****         detector->history[i][detector->history_index].y = keypoints[i].y_center;
 257              		.loc 1 187 9 is_stmt 1 view .LVU59
 258              		.loc 1 187 71 is_stmt 0 view .LVU60
 259 004a 51F8080C 		ldr	r0, [r1, #-8]	@ float
 260              		.loc 1 187 57 view .LVU61
 261 004e 5860     		str	r0, [r3, #4]	@ float
 188:Src/gesture_detection.c ****         detector->history[i][detector->history_index].confidence = keypoints[i].proba;
 262              		.loc 1 188 9 is_stmt 1 view .LVU62
 263              		.loc 1 188 80 is_stmt 0 view .LVU63
 264 0050 51F8040C 		ldr	r0, [r1, #-4]	@ float
 189:Src/gesture_detection.c ****         detector->history[i][detector->history_index].timestamp = current_time;
 265              		.loc 1 189 65 view .LVU64
 266 0054 DC60     		str	r4, [r3, #12]
 188:Src/gesture_detection.c ****         detector->history[i][detector->history_index].confidence = keypoints[i].proba;
 267              		.loc 1 188 66 view .LVU65
 268 0056 9860     		str	r0, [r3, #8]	@ float
 269              		.loc 1 189 9 is_stmt 1 view .LVU66
 185:Src/gesture_detection.c ****         detector->history[i][detector->history_index].x = keypoints[i].x_center;
 270              		.loc 1 185 56 discriminator 3 view .LVU67
 185:Src/gesture_detection.c ****         detector->history[i][detector->history_index].x = keypoints[i].x_center;
 271              		.loc 1 185 23 discriminator 1 view .LVU68
 272 0058 03F52073 		add	r3, r3, #640
 273 005c 0FF00FC0 		le	lr, .L13
 185:Src/gesture_detection.c ****         detector->history[i][detector->history_index].x = keypoints[i].x_center;
 274              		.loc 1 185 23 is_stmt 0 discriminator 1 view .LVU69
 275              	.LBE17:
 190:Src/gesture_detection.c ****     }
 191:Src/gesture_detection.c **** 
 192:Src/gesture_detection.c **** 
 193:Src/gesture_detection.c **** 
 194:Src/gesture_detection.c ****     // Prevent detecting same gesture too quickly
 195:Src/gesture_detection.c ****     if (current_time - detector->last_gesture_time < 1000) { // 1 second cooldown
 276              		.loc 1 195 5 is_stmt 1 view .LVU70
 277              		.loc 1 195 22 is_stmt 0 view .LVU71
 278 0060 D7F88430 		ldr	r3, [r7, #132]
 279 0064 E31A     		subs	r3, r4, r3
 280              		.loc 1 195 8 view .LVU72
 281 0066 B3F57A7F 		cmp	r3, #1000
 282 006a 05D2     		bcs	.L14
 283              	.LVL20:
 284              	.L24:
 196:Src/gesture_detection.c ****         return GESTURE_NONE;
 285              		.loc 1 196 16 view .LVU73
 286 006c 0020     		movs	r0, #0
 287              	.LVL21:
 288              	.L15:
 197:Src/gesture_detection.c ****     }
 198:Src/gesture_detection.c **** 
 199:Src/gesture_detection.c ****     // Try different gesture detection algorithms
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 10


 200:Src/gesture_detection.c ****     GestureType_t detected_gesture = GESTURE_NONE;
 201:Src/gesture_detection.c **** 
 202:Src/gesture_detection.c ****     // Check for sword gestures
 203:Src/gesture_detection.c ****     detected_gesture = Detect_SwordGestures(detector, keypoints);
 204:Src/gesture_detection.c ****     if (detected_gesture != GESTURE_NONE) {
 205:Src/gesture_detection.c ****         detector->last_detected_gesture = detected_gesture;
 206:Src/gesture_detection.c ****         detector->last_gesture_time = current_time;
 207:Src/gesture_detection.c ****         detector->current_display_gesture = detected_gesture;
 208:Src/gesture_detection.c ****         detector->gesture_display_timeout = current_time + GESTURE_DISPLAY_TIME;
 209:Src/gesture_detection.c ****         return detected_gesture;
 210:Src/gesture_detection.c ****     }
 211:Src/gesture_detection.c **** 
 212:Src/gesture_detection.c ****     // Check for arm swipes
 213:Src/gesture_detection.c ****     detected_gesture = Detect_ArmSwipe(detector, keypoints);
 214:Src/gesture_detection.c ****     if (detected_gesture != GESTURE_NONE) {
 215:Src/gesture_detection.c ****         detector->last_detected_gesture = detected_gesture;
 216:Src/gesture_detection.c ****         detector->last_gesture_time = current_time;
 217:Src/gesture_detection.c ****         detector->current_display_gesture = detected_gesture;
 218:Src/gesture_detection.c ****         detector->gesture_display_timeout = current_time + GESTURE_DISPLAY_TIME;
 219:Src/gesture_detection.c ****         return detected_gesture;
 220:Src/gesture_detection.c ****     }
 221:Src/gesture_detection.c **** 
 222:Src/gesture_detection.c **** 
 223:Src/gesture_detection.c **** 
 224:Src/gesture_detection.c ****     return GESTURE_NONE;
 225:Src/gesture_detection.c **** }
 289              		.loc 1 225 1 view .LVU74
 290 006e 05B0     		add	sp, sp, #20
 291              		.cfi_remember_state
 292              		.cfi_def_cfa_offset 52
 293              		@ sp needed
 294 0070 BDEC048B 		vldm	sp!, {d8-d9}
 295              		.cfi_restore 82
 296              		.cfi_restore 83
 297              		.cfi_restore 80
 298              		.cfi_restore 81
 299              		.cfi_def_cfa_offset 36
 300 0074 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 301              	.LVL22:
 302              	.L14:
 303              		.cfi_restore_state
 200:Src/gesture_detection.c **** 
 304              		.loc 1 200 5 is_stmt 1 view .LVU75
 203:Src/gesture_detection.c ****     if (detected_gesture != GESTURE_NONE) {
 305              		.loc 1 203 5 view .LVU76
 306              	.LBB18:
 307              	.LBI18:
 122:Src/gesture_detection.c **** {
 308              		.loc 1 122 22 view .LVU77
 309              	.LBB19:
 124:Src/gesture_detection.c **** 
 310              		.loc 1 124 5 view .LVU78
 126:Src/gesture_detection.c ****     KeypointHistory_t *right_shoulder = detector->history[KEYPOINT_RIGHT_SHOULDER];
 311              		.loc 1 126 5 view .LVU79
 126:Src/gesture_detection.c ****     KeypointHistory_t *right_shoulder = detector->history[KEYPOINT_RIGHT_SHOULDER];
 312              		.loc 1 126 24 is_stmt 0 view .LVU80
 313 0078 06F57060 		add	r0, r6, #3840
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 11


 314              	.LVL23:
 127:Src/gesture_detection.c ****     KeypointHistory_t *right_elbow = detector->history[KEYPOINT_RIGHT_ELBOW];
 315              		.loc 1 127 5 is_stmt 1 view .LVU81
 128:Src/gesture_detection.c ****     KeypointHistory_t *nose = detector->history[KEYPOINT_NOSE];
 316              		.loc 1 128 5 view .LVU82
 129:Src/gesture_detection.c **** 
 317              		.loc 1 129 5 view .LVU83
 131:Src/gesture_detection.c ****         right_shoulder[curr_idx].confidence < MIN_CONFIDENCE ||
 318              		.loc 1 131 5 view .LVU84
 131:Src/gesture_detection.c ****         right_shoulder[curr_idx].confidence < MIN_CONFIDENCE ||
 319              		.loc 1 131 20 is_stmt 0 view .LVU85
 320 007c 00EB080B 		add	fp, r0, r8
 131:Src/gesture_detection.c ****         right_shoulder[curr_idx].confidence < MIN_CONFIDENCE ||
 321              		.loc 1 131 8 view .LVU86
 322 0080 DFED668A 		vldr.32	s17, .L39
 323 0084 DBED027A 		vldr.32	s15, [fp, #8]
 324 0088 F4EEE87A 		vcmpe.f32	s15, s17
 325 008c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 326 0090 43D4     		bmi	.L16
 127:Src/gesture_detection.c ****     KeypointHistory_t *right_elbow = detector->history[KEYPOINT_RIGHT_ELBOW];
 327              		.loc 1 127 24 view .LVU87
 328 0092 06F5A06A 		add	r10, r6, #1280
 132:Src/gesture_detection.c ****         right_elbow[curr_idx].confidence < MIN_CONFIDENCE) {
 329              		.loc 1 132 23 view .LVU88
 330 0096 C244     		add	r10, r10, r8
 131:Src/gesture_detection.c ****         right_shoulder[curr_idx].confidence < MIN_CONFIDENCE ||
 331              		.loc 1 131 59 discriminator 1 view .LVU89
 332 0098 DAED027A 		vldr.32	s15, [r10, #8]
 333 009c F4EEE87A 		vcmpe.f32	s15, s17
 334 00a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 335 00a4 39D4     		bmi	.L16
 133:Src/gesture_detection.c ****         return GESTURE_NONE;
 336              		.loc 1 133 30 view .LVU90
 337 00a6 02F52062 		add	r2, r2, #2560
 132:Src/gesture_detection.c ****         right_elbow[curr_idx].confidence < MIN_CONFIDENCE) {
 338              		.loc 1 132 62 view .LVU91
 339 00aa D2ED027A 		vldr.32	s15, [r2, #8]
 340 00ae F4EEE87A 		vcmpe.f32	s15, s17
 341 00b2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 342 00b6 30D4     		bmi	.L16
 138:Src/gesture_detection.c ****         uint8_t start_idx = (curr_idx - 12 + GESTURE_HISTORY_SIZE) % GESTURE_HISTORY_SIZE;
 343              		.loc 1 138 5 is_stmt 1 view .LVU92
 138:Src/gesture_detection.c ****         uint8_t start_idx = (curr_idx - 12 + GESTURE_HISTORY_SIZE) % GESTURE_HISTORY_SIZE;
 344              		.loc 1 138 8 is_stmt 0 view .LVU93
 345 00b8 0B2D     		cmp	r5, #11
 346 00ba 2EDD     		ble	.L16
 347              	.LBB20:
 139:Src/gesture_detection.c **** 
 348              		.loc 1 139 9 is_stmt 1 view .LVU94
 349              	.LVL24:
 141:Src/gesture_detection.c ****         float32_t curr_y = right_wrist[curr_idx].y;
 350              		.loc 1 141 9 view .LVU95
 139:Src/gesture_detection.c **** 
 351              		.loc 1 139 68 is_stmt 0 view .LVU96
 352 00bc 2823     		movs	r3, #40
 139:Src/gesture_detection.c **** 
 353              		.loc 1 139 44 view .LVU97
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 12


 354 00be 05F11C02 		add	r2, r5, #28
 139:Src/gesture_detection.c **** 
 355              		.loc 1 139 68 view .LVU98
 356 00c2 B2FBF3F1 		udiv	r1, r2, r3
 357 00c6 03FB1122 		mls	r2, r3, r1, r2
 141:Src/gesture_detection.c ****         float32_t curr_y = right_wrist[curr_idx].y;
 358              		.loc 1 141 40 view .LVU99
 359 00ca 00EB0213 		add	r3, r0, r2, lsl #4
 144:Src/gesture_detection.c **** 
 360              		.loc 1 144 19 view .LVU100
 361 00ce 06EB0212 		add	r2, r6, r2, lsl #4
 141:Src/gesture_detection.c ****         float32_t curr_y = right_wrist[curr_idx].y;
 362              		.loc 1 141 19 view .LVU101
 363 00d2 D3ED017A 		vldr.32	s15, [r3, #4]
 364              	.LVL25:
 142:Src/gesture_detection.c ****         float32_t vertical_movement = curr_y - start_y;
 365              		.loc 1 142 9 is_stmt 1 view .LVU102
 147:Src/gesture_detection.c ****             float32_t speed = Gesture_CalculateSpeed(right_wrist, curr_idx, 5);
 366              		.loc 1 147 12 is_stmt 0 view .LVU103
 367 00d6 92ED017A 		vldr.32	s14, [r2, #4]
 368 00da F4EEC77A 		vcmpe.f32	s15, s14
 369 00de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 142:Src/gesture_detection.c ****         float32_t vertical_movement = curr_y - start_y;
 370              		.loc 1 142 19 view .LVU104
 371 00e2 9BED019A 		vldr.32	s18, [fp, #4]
 372              	.LVL26:
 143:Src/gesture_detection.c ****         float32_t start_nose = nose[start_idx].y;
 373              		.loc 1 143 9 is_stmt 1 view .LVU105
 144:Src/gesture_detection.c **** 
 374              		.loc 1 144 9 view .LVU106
 147:Src/gesture_detection.c ****             float32_t speed = Gesture_CalculateSpeed(right_wrist, curr_idx, 5);
 375              		.loc 1 147 9 view .LVU107
 147:Src/gesture_detection.c ****             float32_t speed = Gesture_CalculateSpeed(right_wrist, curr_idx, 5);
 376              		.loc 1 147 12 is_stmt 0 view .LVU108
 377 00e6 61D4     		bmi	.L17
 378              	.LVL27:
 379              	.L19:
 147:Src/gesture_detection.c ****             float32_t speed = Gesture_CalculateSpeed(right_wrist, curr_idx, 5);
 380              		.loc 1 147 12 view .LVU109
 381              	.LBE20:
 382              	.LBB22:
 159:Src/gesture_detection.c ****         float32_t arm_extension = Gesture_CalculateDistance(
 383              		.loc 1 159 68 view .LVU110
 384 00e8 9BED000A 		vldr.32	s0, [fp]
 159:Src/gesture_detection.c ****         float32_t arm_extension = Gesture_CalculateDistance(
 385              		.loc 1 159 71 view .LVU111
 386 00ec 93ED008A 		vldr.32	s16, [r3]
 387 00f0 30EE488A 		vsub.f32	s16, s0, s16
 160:Src/gesture_detection.c ****             right_wrist[curr_idx].x, right_wrist[curr_idx].y,
 388              		.loc 1 160 35 view .LVU112
 389 00f4 DAED011A 		vldr.32	s3, [r10, #4]
 390 00f8 9AED001A 		vldr.32	s2, [r10]
 391 00fc F0EE490A 		vmov.f32	s1, s18
 392 0100 0290     		str	r0, [sp, #8]
 393              	.LBE22:
 156:Src/gesture_detection.c ****         uint8_t start_idx = (curr_idx - 12 + GESTURE_HISTORY_SIZE) % GESTURE_HISTORY_SIZE;
 394              		.loc 1 156 5 is_stmt 1 view .LVU113
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 13


 395              	.LBB24:
 157:Src/gesture_detection.c **** 
 396              		.loc 1 157 9 view .LVU114
 397              	.LVL28:
 159:Src/gesture_detection.c ****         float32_t arm_extension = Gesture_CalculateDistance(
 398              		.loc 1 159 9 view .LVU115
 159:Src/gesture_detection.c ****         float32_t arm_extension = Gesture_CalculateDistance(
 399              		.loc 1 159 19 is_stmt 0 view .LVU116
 400 0102 B0EEC88A 		vabs.f32	s16, s16
 401              	.LVL29:
 160:Src/gesture_detection.c ****             right_wrist[curr_idx].x, right_wrist[curr_idx].y,
 402              		.loc 1 160 9 is_stmt 1 view .LVU117
 160:Src/gesture_detection.c ****             right_wrist[curr_idx].x, right_wrist[curr_idx].y,
 403              		.loc 1 160 35 is_stmt 0 view .LVU118
 404 0106 FFF7FEFF 		bl	Gesture_CalculateDistance
 405              	.LVL30:
 165:Src/gesture_detection.c ****             float32_t speed = Gesture_CalculateSpeed(right_wrist, curr_idx, 3);
 406              		.loc 1 165 9 is_stmt 1 view .LVU119
 165:Src/gesture_detection.c ****             float32_t speed = Gesture_CalculateSpeed(right_wrist, curr_idx, 3);
 407              		.loc 1 165 12 is_stmt 0 view .LVU120
 408 010a DFED457A 		vldr.32	s15, .L39+4
 409 010e B4EEE78A 		vcmpe.f32	s16, s15
 410 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 411 0116 0298     		ldr	r0, [sp, #8]
 412 0118 62DC     		bgt	.L18
 413              	.LVL31:
 414              	.L16:
 165:Src/gesture_detection.c ****             float32_t speed = Gesture_CalculateSpeed(right_wrist, curr_idx, 3);
 415              		.loc 1 165 12 view .LVU121
 416              	.LBE24:
 417              	.LBE19:
 418              	.LBE18:
 213:Src/gesture_detection.c ****     if (detected_gesture != GESTURE_NONE) {
 419              		.loc 1 213 5 is_stmt 1 view .LVU122
 420              	.LBB29:
 421              	.LBI29:
  48:Src/gesture_detection.c **** {
 422              		.loc 1 48 22 view .LVU123
 423              	.LBB30:
  50:Src/gesture_detection.c ****     uint8_t prev_idx = (curr_idx - 4 + GESTURE_HISTORY_SIZE) % GESTURE_HISTORY_SIZE;
 424              		.loc 1 50 5 view .LVU124
  51:Src/gesture_detection.c **** 
 425              		.loc 1 51 5 view .LVU125
  93:Src/gesture_detection.c ****     KeypointHistory_t *left_shoulder = detector->history[KEYPOINT_LEFT_SHOULDER];
 426              		.loc 1 93 5 view .LVU126
  93:Src/gesture_detection.c ****     KeypointHistory_t *left_shoulder = detector->history[KEYPOINT_LEFT_SHOULDER];
 427              		.loc 1 93 24 is_stmt 0 view .LVU127
 428 011a 06F54860 		add	r0, r6, #3200
 429              	.LVL32:
  94:Src/gesture_detection.c **** 
 430              		.loc 1 94 5 is_stmt 1 view .LVU128
  96:Src/gesture_detection.c ****     	//	&&  left_shoulder[curr_idx].confidence > MIN_CONFIDENCE
 431              		.loc 1 96 5 view .LVU129
  96:Src/gesture_detection.c ****     	//	&&  left_shoulder[curr_idx].confidence > MIN_CONFIDENCE
 432              		.loc 1 96 19 is_stmt 0 view .LVU130
 433 011e 8044     		add	r8, r8, r0
  96:Src/gesture_detection.c ****     	//	&&  left_shoulder[curr_idx].confidence > MIN_CONFIDENCE
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 14


 434              		.loc 1 96 8 view .LVU131
 435 0120 D8ED027A 		vldr.32	s15, [r8, #8]
 436 0124 F4EEE87A 		vcmpe.f32	s15, s17
 437 0128 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 438 012c 9EDD     		ble	.L24
  51:Src/gesture_detection.c **** 
 439              		.loc 1 51 62 view .LVU132
 440 012e 2823     		movs	r3, #40
  51:Src/gesture_detection.c **** 
 441              		.loc 1 51 38 view .LVU133
 442 0130 05F12406 		add	r6, r5, #36
 443              	.LVL33:
  51:Src/gesture_detection.c **** 
 444              		.loc 1 51 62 view .LVU134
 445 0134 B6FBF3F2 		udiv	r2, r6, r3
 446 0138 03FB1266 		mls	r6, r3, r2, r6
 447              	.LVL34:
 448              	.LBB31:
 100:Src/gesture_detection.c ****         float32_t wrist_speed = Gesture_CalculateSpeed(left_wrist, curr_idx, 3);
 449              		.loc 1 100 9 is_stmt 1 view .LVU135
 100:Src/gesture_detection.c ****         float32_t wrist_speed = Gesture_CalculateSpeed(left_wrist, curr_idx, 3);
 450              		.loc 1 100 75 is_stmt 0 view .LVU136
 451 013c 00EB0613 		add	r3, r0, r6, lsl #4
 100:Src/gesture_detection.c ****         float32_t wrist_speed = Gesture_CalculateSpeed(left_wrist, curr_idx, 3);
 452              		.loc 1 100 19 view .LVU137
 453 0140 D3ED007A 		vldr.32	s15, [r3]
 454 0144 98ED008A 		vldr.32	s16, [r8]
 101:Src/gesture_detection.c ****         UTIL_LCDEx_PrintfAt(0, LINE(15), CENTER_MODE, "idx:%d/%d,w_dx: %.3f, w_sp: %.3f", prev_idx,
 455              		.loc 1 101 33 view .LVU138
 456 0148 0322     		movs	r2, #3
 457 014a 4946     		mov	r1, r9
 100:Src/gesture_detection.c ****         float32_t wrist_speed = Gesture_CalculateSpeed(left_wrist, curr_idx, 3);
 458              		.loc 1 100 19 view .LVU139
 459 014c 38EE678A 		vsub.f32	s16, s16, s15
 460              	.LVL35:
 101:Src/gesture_detection.c ****         UTIL_LCDEx_PrintfAt(0, LINE(15), CENTER_MODE, "idx:%d/%d,w_dx: %.3f, w_sp: %.3f", prev_idx,
 461              		.loc 1 101 9 is_stmt 1 view .LVU140
 101:Src/gesture_detection.c ****         UTIL_LCDEx_PrintfAt(0, LINE(15), CENTER_MODE, "idx:%d/%d,w_dx: %.3f, w_sp: %.3f", prev_idx,
 462              		.loc 1 101 33 is_stmt 0 view .LVU141
 463 0150 FFF7FEFF 		bl	Gesture_CalculateSpeed
 464              	.LVL36:
 101:Src/gesture_detection.c ****         UTIL_LCDEx_PrintfAt(0, LINE(15), CENTER_MODE, "idx:%d/%d,w_dx: %.3f, w_sp: %.3f", prev_idx,
 465              		.loc 1 101 33 view .LVU142
 466 0154 F0EE408A 		vmov.f32	s17, s0
 467              	.LVL37:
 102:Src/gesture_detection.c ****         if (fabsf(wrist_dx) > 0.05f && wrist_speed > SWIPE_MIN_SPEED) {
 468              		.loc 1 102 9 is_stmt 1 view .LVU143
 102:Src/gesture_detection.c ****         if (fabsf(wrist_dx) > 0.05f && wrist_speed > SWIPE_MIN_SPEED) {
 469              		.loc 1 102 32 is_stmt 0 view .LVU144
 470 0158 FFF7FEFF 		bl	UTIL_LCD_GetFont
 471              	.LVL38:
 102:Src/gesture_detection.c ****         if (fabsf(wrist_dx) > 0.05f && wrist_speed > SWIPE_MIN_SPEED) {
 472              		.loc 1 102 32 discriminator 1 view .LVU145
 473 015c C188     		ldrh	r1, [r0, #6]
 102:Src/gesture_detection.c ****         if (fabsf(wrist_dx) > 0.05f && wrist_speed > SWIPE_MIN_SPEED) {
 474              		.loc 1 102 9 discriminator 1 view .LVU146
 475 015e B7EEE81A 		vcvt.f64.f32	d1, s17
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 15


 476 0162 B7EEC80A 		vcvt.f64.f32	d0, s16
 477 0166 0122     		movs	r2, #1
 478 0168 0020     		movs	r0, #0
 479 016a CDE90065 		strd	r6, r5, [sp]
 480 016e 2D4B     		ldr	r3, .L39+8
 481 0170 C1EB0111 		rsb	r1, r1, r1, lsl #4
 482 0174 FFF7FEFF 		bl	UTIL_LCDEx_PrintfAt
 483              	.LVL39:
 103:Src/gesture_detection.c ****         //    float32_t arm_extension = Gesture_CalculateDistance(
 484              		.loc 1 103 9 is_stmt 1 view .LVU147
 103:Src/gesture_detection.c ****         //    float32_t arm_extension = Gesture_CalculateDistance(
 485              		.loc 1 103 13 is_stmt 0 view .LVU148
 486 0178 B0EEC87A 		vabs.f32	s14, s16
 103:Src/gesture_detection.c ****         //    float32_t arm_extension = Gesture_CalculateDistance(
 487              		.loc 1 103 12 view .LVU149
 488 017c DFED2A7A 		vldr.32	s15, .L39+12
 489 0180 B4EEE77A 		vcmpe.f32	s14, s15
 490 0184 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 491 0188 7FF770AF 		ble	.L24
 103:Src/gesture_detection.c ****         //    float32_t arm_extension = Gesture_CalculateDistance(
 492              		.loc 1 103 37 discriminator 1 view .LVU150
 493 018c F6EE007A 		vmov.f32	s15, #5.0e-1
 494 0190 F4EEE78A 		vcmpe.f32	s17, s15
 495 0194 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 496 0198 7FF768AF 		ble	.L24
 110:Src/gesture_detection.c ****                     return GESTURE_LEFT_ARM_SWIPE_RIGHT;
 497              		.loc 1 110 17 is_stmt 1 view .LVU151
 113:Src/gesture_detection.c ****                 }
 498              		.loc 1 113 28 is_stmt 0 view .LVU152
 499 019c B5EEC08A 		vcmpe.f32	s16, #0
 500 01a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 501 01a4 CCBF     		ite	gt
 502 01a6 0420     		movgt	r0, #4
 503 01a8 0320     		movle	r0, #3
 504 01aa 2CE0     		b	.L38
 505              	.LVL40:
 506              	.L17:
 113:Src/gesture_detection.c ****                 }
 507              		.loc 1 113 28 view .LVU153
 508              	.LBE31:
 509              	.LBE30:
 510              	.LBE29:
 511              	.LBB32:
 512              	.LBB27:
 513              	.LBB25:
 143:Src/gesture_detection.c ****         float32_t start_nose = nose[start_idx].y;
 514              		.loc 1 143 19 view .LVU154
 515 01ac 79EE677A 		vsub.f32	s15, s18, s15
 516              	.LVL41:
 147:Src/gesture_detection.c ****             float32_t speed = Gesture_CalculateSpeed(right_wrist, curr_idx, 5);
 517              		.loc 1 147 34 discriminator 1 view .LVU155
 518 01b0 B5EE007A 		vmov.f32	s14, #2.5e-1
 519 01b4 F4EEC77A 		vcmpe.f32	s15, s14
 520 01b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 521 01bc 94DD     		ble	.L19
 522              	.LBB21:
 148:Src/gesture_detection.c ****             if (speed > SWIPE_MIN_SPEED * 1.5f) {
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 16


 523              		.loc 1 148 31 view .LVU156
 524 01be 0522     		movs	r2, #5
 525 01c0 4946     		mov	r1, r9
 526 01c2 0393     		str	r3, [sp, #12]
 148:Src/gesture_detection.c ****             if (speed > SWIPE_MIN_SPEED * 1.5f) {
 527              		.loc 1 148 13 is_stmt 1 view .LVU157
 148:Src/gesture_detection.c ****             if (speed > SWIPE_MIN_SPEED * 1.5f) {
 528              		.loc 1 148 31 is_stmt 0 view .LVU158
 529 01c4 0290     		str	r0, [sp, #8]
 530 01c6 FFF7FEFF 		bl	Gesture_CalculateSpeed
 531              	.LVL42:
 149:Src/gesture_detection.c ****                 return GESTURE_SWORD_OVERHEAD_STRIKE;
 532              		.loc 1 149 13 is_stmt 1 view .LVU159
 149:Src/gesture_detection.c ****                 return GESTURE_SWORD_OVERHEAD_STRIKE;
 533              		.loc 1 149 16 is_stmt 0 view .LVU160
 534 01ca DDE90203 		ldrd	r0, r3, [sp, #8]
 535 01ce F6EE087A 		vmov.f32	s15, #7.5e-1
 536 01d2 B4EEE70A 		vcmpe.f32	s0, s15
 537 01d6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 538 01da 85DD     		ble	.L19
 150:Src/gesture_detection.c ****             }
 539              		.loc 1 150 24 view .LVU161
 540 01dc 0620     		movs	r0, #6
 541              	.LVL43:
 150:Src/gesture_detection.c ****             }
 542              		.loc 1 150 24 view .LVU162
 543              	.LBE21:
 544              	.LBE25:
 545              	.LBE27:
 546              	.LBE32:
 205:Src/gesture_detection.c ****         detector->last_gesture_time = current_time;
 547              		.loc 1 205 9 is_stmt 1 view .LVU163
 548 01de 12E0     		b	.L38
 549              	.LVL44:
 550              	.L18:
 551              	.LBB33:
 552              	.LBB28:
 553              	.LBB26:
 165:Src/gesture_detection.c ****             float32_t speed = Gesture_CalculateSpeed(right_wrist, curr_idx, 3);
 554              		.loc 1 165 40 is_stmt 0 discriminator 1 view .LVU164
 555 01e0 F5EE007A 		vmov.f32	s15, #2.5e-1
 556 01e4 B4EEE70A 		vcmpe.f32	s0, s15
 557 01e8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 558 01ec 95DD     		ble	.L16
 559              	.LBB23:
 166:Src/gesture_detection.c ****             if (speed > SWIPE_MIN_SPEED) {
 560              		.loc 1 166 13 is_stmt 1 view .LVU165
 166:Src/gesture_detection.c ****             if (speed > SWIPE_MIN_SPEED) {
 561              		.loc 1 166 31 is_stmt 0 view .LVU166
 562 01ee 0322     		movs	r2, #3
 563 01f0 4946     		mov	r1, r9
 564 01f2 FFF7FEFF 		bl	Gesture_CalculateSpeed
 565              	.LVL45:
 167:Src/gesture_detection.c ****                 return GESTURE_SWORD_SIDE_SLASH;
 566              		.loc 1 167 13 is_stmt 1 view .LVU167
 167:Src/gesture_detection.c ****                 return GESTURE_SWORD_SIDE_SLASH;
 567              		.loc 1 167 16 is_stmt 0 view .LVU168
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 17


 568 01f6 F6EE007A 		vmov.f32	s15, #5.0e-1
 569 01fa B4EEE70A 		vcmpe.f32	s0, s15
 570 01fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 571 0202 8ADD     		ble	.L16
 168:Src/gesture_detection.c ****             }
 572              		.loc 1 168 24 view .LVU169
 573 0204 0720     		movs	r0, #7
 574              	.LVL46:
 575              	.L38:
 168:Src/gesture_detection.c ****             }
 576              		.loc 1 168 24 view .LVU170
 577              	.LBE23:
 578              	.LBE26:
 579              	.LBE28:
 580              	.LBE33:
 215:Src/gesture_detection.c ****         detector->last_gesture_time = current_time;
 581              		.loc 1 215 9 is_stmt 1 view .LVU171
 216:Src/gesture_detection.c ****         detector->current_display_gesture = detected_gesture;
 582              		.loc 1 216 37 is_stmt 0 view .LVU172
 583 0206 C7F88440 		str	r4, [r7, #132]
 218:Src/gesture_detection.c ****         return detected_gesture;
 584              		.loc 1 218 58 view .LVU173
 585 020a 04F2DC54 		addw	r4, r4, #1500
 586              	.LVL47:
 215:Src/gesture_detection.c ****         detector->last_gesture_time = current_time;
 587              		.loc 1 215 41 view .LVU174
 588 020e 87F88100 		strb	r0, [r7, #129]
 216:Src/gesture_detection.c ****         detector->current_display_gesture = detected_gesture;
 589              		.loc 1 216 9 is_stmt 1 view .LVU175
 217:Src/gesture_detection.c ****         detector->gesture_display_timeout = current_time + GESTURE_DISPLAY_TIME;
 590              		.loc 1 217 9 view .LVU176
 217:Src/gesture_detection.c ****         detector->gesture_display_timeout = current_time + GESTURE_DISPLAY_TIME;
 591              		.loc 1 217 43 is_stmt 0 view .LVU177
 592 0212 87F88800 		strb	r0, [r7, #136]
 218:Src/gesture_detection.c ****         return detected_gesture;
 593              		.loc 1 218 9 is_stmt 1 view .LVU178
 218:Src/gesture_detection.c ****         return detected_gesture;
 594              		.loc 1 218 43 is_stmt 0 view .LVU179
 595 0216 C7F88C40 		str	r4, [r7, #140]
 219:Src/gesture_detection.c ****     }
 596              		.loc 1 219 9 is_stmt 1 view .LVU180
 219:Src/gesture_detection.c ****     }
 597              		.loc 1 219 16 is_stmt 0 view .LVU181
 598 021a 28E7     		b	.L15
 599              	.L40:
 600              		.align	2
 601              	.L39:
 602 021c 6666E63E 		.word	1055286886
 603 0220 CDCC4C3E 		.word	1045220557
 604 0224 00000000 		.word	.LC0
 605 0228 CDCC4C3D 		.word	1028443341
 606              		.cfi_endproc
 607              	.LFE3344:
 609              		.section	.rodata.Gesture_GetName.str1.1,"aMS",%progbits,1
 610              	.LC1:
 611 0000 4E6F2047 		.ascii	"No Gesture\000"
 611      65737475 
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 18


 611      726500
 612              		.section	.text.Gesture_GetName,"ax",%progbits
 613              		.align	1
 614              		.global	Gesture_GetName
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 619              	Gesture_GetName:
 620              	.LVL48:
 621              	.LFB3345:
 226:Src/gesture_detection.c **** 
 227:Src/gesture_detection.c **** const char* Gesture_GetName(GestureType_t gesture)
 228:Src/gesture_detection.c **** {
 622              		.loc 1 228 1 is_stmt 1 view -0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 229:Src/gesture_detection.c ****     switch (gesture) {
 627              		.loc 1 229 5 view .LVU183
 628 0000 0138     		subs	r0, r0, #1
 629              	.LVL49:
 630              		.loc 1 229 5 is_stmt 0 view .LVU184
 631 0002 C0B2     		uxtb	r0, r0
 632              	.LVL50:
 633              		.loc 1 229 5 view .LVU185
 634 0004 0628     		cmp	r0, #6
 635 0006 9ABF     		itte	ls
 636 0008 024B     		ldrls	r3, .L44
 637 000a 53F82000 		ldrls	r0, [r3, r0, lsl #2]
 228:Src/gesture_detection.c ****     switch (gesture) {
 638              		.loc 1 228 1 view .LVU186
 639 000e 0248     		ldrhi	r0, .L44+4
 230:Src/gesture_detection.c ****         case GESTURE_RIGHT_ARM_SWIPE_LEFT:   return "Right Arm Swipe Left";
 231:Src/gesture_detection.c ****         case GESTURE_RIGHT_ARM_SWIPE_RIGHT:  return "Right Arm Swipe Right";
 232:Src/gesture_detection.c ****         case GESTURE_LEFT_ARM_SWIPE_LEFT:    return "Left Arm Swipe Left";
 233:Src/gesture_detection.c ****         case GESTURE_LEFT_ARM_SWIPE_RIGHT:   return "Left Arm Swipe Right";
 234:Src/gesture_detection.c ****         case GESTURE_BOTH_ARMS_RAISED:       return "Both Arms Raised";
 235:Src/gesture_detection.c ****         case GESTURE_SWORD_OVERHEAD_STRIKE:  return "Sword Overhead Strike";
 236:Src/gesture_detection.c ****         case GESTURE_SWORD_SIDE_SLASH:       return "Sword Side Slash";
 237:Src/gesture_detection.c ****         default:                             return "No Gesture";
 238:Src/gesture_detection.c ****     }
 239:Src/gesture_detection.c **** }
 640              		.loc 1 239 1 view .LVU187
 641 0010 7047     		bx	lr
 642              	.L45:
 643 0012 00BF     		.align	2
 644              	.L44:
 645 0014 00000000 		.word	CSWTCH.10
 646 0018 00000000 		.word	.LC1
 647              		.cfi_endproc
 648              	.LFE3345:
 650              		.section	.text.Gesture_GetCurrentDisplayGesture,"ax",%progbits
 651              		.align	1
 652              		.global	Gesture_GetCurrentDisplayGesture
 653              		.syntax unified
 654              		.thumb
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 19


 655              		.thumb_func
 657              	Gesture_GetCurrentDisplayGesture:
 658              	.LVL51:
 659              	.LFB3346:
 240:Src/gesture_detection.c **** 
 241:Src/gesture_detection.c **** GestureType_t Gesture_GetCurrentDisplayGesture(GestureDetector_t *detector)
 242:Src/gesture_detection.c **** {
 660              		.loc 1 242 1 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 243:Src/gesture_detection.c ****     uint32_t current_time = HAL_GetTick();
 664              		.loc 1 243 5 view .LVU189
 242:Src/gesture_detection.c ****     uint32_t current_time = HAL_GetTick();
 665              		.loc 1 242 1 is_stmt 0 view .LVU190
 666 0000 10B5     		push	{r4, lr}
 667              		.cfi_def_cfa_offset 8
 668              		.cfi_offset 4, -8
 669              		.cfi_offset 14, -4
 242:Src/gesture_detection.c ****     uint32_t current_time = HAL_GetTick();
 670              		.loc 1 242 1 view .LVU191
 671 0002 0446     		mov	r4, r0
 672              		.loc 1 243 29 view .LVU192
 673 0004 FFF7FEFF 		bl	HAL_GetTick
 674              	.LVL52:
 244:Src/gesture_detection.c **** 
 245:Src/gesture_detection.c ****     // Check if display timeout has expired
 246:Src/gesture_detection.c ****     if (current_time > detector->gesture_display_timeout) {
 675              		.loc 1 246 5 is_stmt 1 view .LVU193
 676              		.loc 1 246 32 is_stmt 0 view .LVU194
 677 0008 04F50053 		add	r3, r4, #8192
 678              		.loc 1 246 8 view .LVU195
 679 000c D3F88C20 		ldr	r2, [r3, #140]
 680 0010 8242     		cmp	r2, r0
 247:Src/gesture_detection.c ****         detector->current_display_gesture = GESTURE_NONE;
 681              		.loc 1 247 9 is_stmt 1 view .LVU196
 682              		.loc 1 247 43 is_stmt 0 view .LVU197
 683 0012 3CBF     		itt	cc
 684 0014 0022     		movcc	r2, #0
 685 0016 83F88820 		strbcc	r2, [r3, #136]
 248:Src/gesture_detection.c ****     }
 249:Src/gesture_detection.c **** 
 250:Src/gesture_detection.c ****     return detector->current_display_gesture;
 686              		.loc 1 250 5 is_stmt 1 view .LVU198
 251:Src/gesture_detection.c **** }
 687              		.loc 1 251 1 is_stmt 0 view .LVU199
 688 001a 93F88800 		ldrb	r0, [r3, #136]	@ zero_extendqisi2
 689              	.LVL53:
 690              		.loc 1 251 1 view .LVU200
 691 001e 10BD     		pop	{r4, pc}
 692              		.loc 1 251 1 view .LVU201
 693              		.cfi_endproc
 694              	.LFE3346:
 696              		.section	.text.Gesture_GetKeypointDebugInfo,"ax",%progbits
 697              		.align	1
 698              		.global	Gesture_GetKeypointDebugInfo
 699              		.syntax unified
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 20


 700              		.thumb
 701              		.thumb_func
 703              	Gesture_GetKeypointDebugInfo:
 704              	.LVL54:
 705              	.LFB3347:
 252:Src/gesture_detection.c **** 
 253:Src/gesture_detection.c **** void Gesture_GetKeypointDebugInfo(GestureDetector_t *detector, uint8_t keypoint_idx,
 254:Src/gesture_detection.c ****                                   float32_t *current_x, float32_t *current_y,
 255:Src/gesture_detection.c ****                                   float32_t *current_confidence, float32_t *current_speed)
 256:Src/gesture_detection.c **** {
 706              		.loc 1 256 1 is_stmt 1 view -0
 707              		.cfi_startproc
 708              		@ args = 8, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 257:Src/gesture_detection.c ****     if (keypoint_idx >= AI_POSE_PP_POSE_KEYPOINTS_NB) {
 710              		.loc 1 257 5 view .LVU203
 256:Src/gesture_detection.c ****     if (keypoint_idx >= AI_POSE_PP_POSE_KEYPOINTS_NB) {
 711              		.loc 1 256 1 is_stmt 0 view .LVU204
 712 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 713              		.cfi_def_cfa_offset 24
 714              		.cfi_offset 3, -24
 715              		.cfi_offset 4, -20
 716              		.cfi_offset 5, -16
 717              		.cfi_offset 6, -12
 718              		.cfi_offset 7, -8
 719              		.cfi_offset 14, -4
 720              		.loc 1 257 8 view .LVU205
 721 0002 0C29     		cmp	r1, #12
 256:Src/gesture_detection.c ****     if (keypoint_idx >= AI_POSE_PP_POSE_KEYPOINTS_NB) {
 722              		.loc 1 256 1 view .LVU206
 723 0004 0E46     		mov	r6, r1
 724 0006 069F     		ldr	r7, [sp, #24]
 725              		.loc 1 257 8 view .LVU207
 726 0008 06D9     		bls	.L49
 258:Src/gesture_detection.c ****         *current_x = 0.0f;
 727              		.loc 1 258 9 is_stmt 1 view .LVU208
 728              		.loc 1 258 20 is_stmt 0 view .LVU209
 729 000a 0021     		movs	r1, #0
 730              	.LVL55:
 731              		.loc 1 258 20 view .LVU210
 732 000c 1160     		str	r1, [r2]	@ float
 259:Src/gesture_detection.c ****         *current_y = 0.0f;
 733              		.loc 1 259 9 is_stmt 1 view .LVU211
 734              		.loc 1 259 20 is_stmt 0 view .LVU212
 735 000e 1960     		str	r1, [r3]	@ float
 260:Src/gesture_detection.c ****         *current_confidence = 0.0f;
 736              		.loc 1 260 9 is_stmt 1 view .LVU213
 737              		.loc 1 260 29 is_stmt 0 view .LVU214
 738 0010 3960     		str	r1, [r7]	@ float
 261:Src/gesture_detection.c ****         *current_speed = 0.0f;
 739              		.loc 1 261 9 is_stmt 1 view .LVU215
 262:Src/gesture_detection.c ****         return;
 740              		.loc 1 262 9 view .LVU216
 741              	.LVL56:
 742              	.L50:
 261:Src/gesture_detection.c ****         *current_speed = 0.0f;
 743              		.loc 1 261 24 is_stmt 0 view .LVU217
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 21


 744 0012 079B     		ldr	r3, [sp, #28]
 745 0014 1960     		str	r1, [r3]	@ float
 263:Src/gesture_detection.c ****     }
 264:Src/gesture_detection.c **** 
 265:Src/gesture_detection.c ****     // Get current index (last updated position)
 266:Src/gesture_detection.c ****     uint8_t curr_idx = (detector->history_index + GESTURE_HISTORY_SIZE) % GESTURE_HISTORY_SIZE;
 267:Src/gesture_detection.c **** 
 268:Src/gesture_detection.c ****     // Get current keypoint data
 269:Src/gesture_detection.c ****     *current_x = detector->history[keypoint_idx][curr_idx].x;
 270:Src/gesture_detection.c ****     *current_y = detector->history[keypoint_idx][curr_idx].y;
 271:Src/gesture_detection.c ****     *current_confidence = detector->history[keypoint_idx][curr_idx].confidence;
 272:Src/gesture_detection.c **** 
 273:Src/gesture_detection.c ****     // Calculate speed over last 3 frames
 274:Src/gesture_detection.c ****     *current_speed = Gesture_CalculateSpeed(detector->history[keypoint_idx], curr_idx, 3);
 275:Src/gesture_detection.c **** }
 746              		.loc 1 275 1 view .LVU218
 747 0016 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 748              	.LVL57:
 749              	.L49:
 266:Src/gesture_detection.c **** 
 750              		.loc 1 266 5 is_stmt 1 view .LVU219
 266:Src/gesture_detection.c **** 
 751              		.loc 1 266 73 is_stmt 0 view .LVU220
 752 0018 2824     		movs	r4, #40
 266:Src/gesture_detection.c **** 
 753              		.loc 1 266 33 view .LVU221
 754 001a 00F50051 		add	r1, r0, #8192
 755              	.LVL58:
 266:Src/gesture_detection.c **** 
 756              		.loc 1 266 33 view .LVU222
 757 001e 91F88050 		ldrb	r5, [r1, #128]	@ zero_extendqisi2
 266:Src/gesture_detection.c **** 
 758              		.loc 1 266 49 view .LVU223
 759 0022 2835     		adds	r5, r5, #40
 266:Src/gesture_detection.c **** 
 760              		.loc 1 266 73 view .LVU224
 761 0024 B5FBF4F1 		udiv	r1, r5, r4
 762 0028 04FB1151 		mls	r1, r4, r1, r5
 763              	.LVL59:
 269:Src/gesture_detection.c ****     *current_y = detector->history[keypoint_idx][curr_idx].y;
 764              		.loc 1 269 5 is_stmt 1 view .LVU225
 269:Src/gesture_detection.c ****     *current_y = detector->history[keypoint_idx][curr_idx].y;
 765              		.loc 1 269 59 is_stmt 0 view .LVU226
 766 002c 04FB0614 		mla	r4, r4, r6, r1
 767 0030 00EB0414 		add	r4, r0, r4, lsl #4
 768 0034 2568     		ldr	r5, [r4]	@ float
 274:Src/gesture_detection.c **** }
 769              		.loc 1 274 22 view .LVU227
 770 0036 C9B2     		uxtb	r1, r1
 269:Src/gesture_detection.c ****     *current_y = detector->history[keypoint_idx][curr_idx].y;
 771              		.loc 1 269 16 view .LVU228
 772 0038 1560     		str	r5, [r2]	@ float
 270:Src/gesture_detection.c ****     *current_confidence = detector->history[keypoint_idx][curr_idx].confidence;
 773              		.loc 1 270 5 is_stmt 1 view .LVU229
 270:Src/gesture_detection.c ****     *current_confidence = detector->history[keypoint_idx][curr_idx].confidence;
 774              		.loc 1 270 59 is_stmt 0 view .LVU230
 775 003a 6268     		ldr	r2, [r4, #4]	@ float
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 22


 776              	.LVL60:
 270:Src/gesture_detection.c ****     *current_confidence = detector->history[keypoint_idx][curr_idx].confidence;
 777              		.loc 1 270 16 view .LVU231
 778 003c 1A60     		str	r2, [r3]	@ float
 271:Src/gesture_detection.c **** 
 779              		.loc 1 271 5 is_stmt 1 view .LVU232
 271:Src/gesture_detection.c **** 
 780              		.loc 1 271 68 is_stmt 0 view .LVU233
 781 003e A368     		ldr	r3, [r4, #8]	@ float
 782              	.LVL61:
 274:Src/gesture_detection.c **** }
 783              		.loc 1 274 22 view .LVU234
 784 0040 0322     		movs	r2, #3
 271:Src/gesture_detection.c **** 
 785              		.loc 1 271 25 view .LVU235
 786 0042 3B60     		str	r3, [r7]	@ float
 274:Src/gesture_detection.c **** }
 787              		.loc 1 274 5 is_stmt 1 view .LVU236
 274:Src/gesture_detection.c **** }
 788              		.loc 1 274 22 is_stmt 0 view .LVU237
 789 0044 4FF42073 		mov	r3, #640
 790 0048 03FB0600 		mla	r0, r3, r6, r0
 791              	.LVL62:
 274:Src/gesture_detection.c **** }
 792              		.loc 1 274 22 view .LVU238
 793 004c FFF7FEFF 		bl	Gesture_CalculateSpeed
 794              	.LVL63:
 274:Src/gesture_detection.c **** }
 795              		.loc 1 274 22 view .LVU239
 796 0050 10EE101A 		vmov	r1, s0
 797 0054 DDE7     		b	.L50
 798              		.cfi_endproc
 799              	.LFE3347:
 801              		.section	.text.Gesture_GetPastKeypointDebugInfo,"ax",%progbits
 802              		.align	1
 803              		.global	Gesture_GetPastKeypointDebugInfo
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 808              	Gesture_GetPastKeypointDebugInfo:
 809              	.LVL64:
 810              	.LFB3348:
 276:Src/gesture_detection.c **** 
 277:Src/gesture_detection.c **** 
 278:Src/gesture_detection.c **** void Gesture_GetPastKeypointDebugInfo(GestureDetector_t *detector, uint8_t keypoint_idx,
 279:Src/gesture_detection.c ****                                   float32_t *current_x, float32_t *current_y,
 280:Src/gesture_detection.c ****                                   float32_t *current_confidence, float32_t *current_speed, uint8_t 
 281:Src/gesture_detection.c **** {
 811              		.loc 1 281 1 is_stmt 1 view -0
 812              		.cfi_startproc
 813              		@ args = 12, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 282:Src/gesture_detection.c ****     if (keypoint_idx >= AI_POSE_PP_POSE_KEYPOINTS_NB) {
 815              		.loc 1 282 5 view .LVU241
 281:Src/gesture_detection.c ****     if (keypoint_idx >= AI_POSE_PP_POSE_KEYPOINTS_NB) {
 816              		.loc 1 281 1 is_stmt 0 view .LVU242
 817 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 23


 818              		.cfi_def_cfa_offset 24
 819              		.cfi_offset 3, -24
 820              		.cfi_offset 4, -20
 821              		.cfi_offset 5, -16
 822              		.cfi_offset 6, -12
 823              		.cfi_offset 7, -8
 824              		.cfi_offset 14, -4
 825              		.loc 1 282 8 view .LVU243
 826 0002 0C29     		cmp	r1, #12
 281:Src/gesture_detection.c ****     if (keypoint_idx >= AI_POSE_PP_POSE_KEYPOINTS_NB) {
 827              		.loc 1 281 1 view .LVU244
 828 0004 0E46     		mov	r6, r1
 829 0006 069F     		ldr	r7, [sp, #24]
 830              		.loc 1 282 8 view .LVU245
 831 0008 06D9     		bls	.L52
 283:Src/gesture_detection.c ****         *current_x = 0.0f;
 832              		.loc 1 283 9 is_stmt 1 view .LVU246
 833              		.loc 1 283 20 is_stmt 0 view .LVU247
 834 000a 0021     		movs	r1, #0
 835              	.LVL65:
 836              		.loc 1 283 20 view .LVU248
 837 000c 1160     		str	r1, [r2]	@ float
 284:Src/gesture_detection.c ****         *current_y = 0.0f;
 838              		.loc 1 284 9 is_stmt 1 view .LVU249
 839              		.loc 1 284 20 is_stmt 0 view .LVU250
 840 000e 1960     		str	r1, [r3]	@ float
 285:Src/gesture_detection.c ****         *current_confidence = 0.0f;
 841              		.loc 1 285 9 is_stmt 1 view .LVU251
 842              		.loc 1 285 29 is_stmt 0 view .LVU252
 843 0010 3960     		str	r1, [r7]	@ float
 286:Src/gesture_detection.c ****         *current_speed = 0.0f;
 844              		.loc 1 286 9 is_stmt 1 view .LVU253
 287:Src/gesture_detection.c ****         return;
 845              		.loc 1 287 9 view .LVU254
 846              	.LVL66:
 847              	.L53:
 286:Src/gesture_detection.c ****         *current_speed = 0.0f;
 848              		.loc 1 286 24 is_stmt 0 view .LVU255
 849 0012 079B     		ldr	r3, [sp, #28]
 850 0014 1960     		str	r1, [r3]	@ float
 288:Src/gesture_detection.c ****     }
 289:Src/gesture_detection.c **** 
 290:Src/gesture_detection.c ****     // Get past index (using past_keypoint_offset)
 291:Src/gesture_detection.c ****     uint8_t read_idx = (detector->history_index - past_keypoint_offset+ GESTURE_HISTORY_SIZE) % GES
 292:Src/gesture_detection.c **** 
 293:Src/gesture_detection.c ****     // Get that keypoint's data
 294:Src/gesture_detection.c ****     *current_x = detector->history[keypoint_idx][read_idx].x;
 295:Src/gesture_detection.c ****     *current_y = detector->history[keypoint_idx][read_idx].y;
 296:Src/gesture_detection.c ****     *current_confidence = detector->history[keypoint_idx][read_idx].confidence;
 297:Src/gesture_detection.c **** 
 298:Src/gesture_detection.c ****     // Calculate speed over last 3 frames
 299:Src/gesture_detection.c ****     *current_speed = Gesture_CalculateSpeed(detector->history[keypoint_idx], read_idx, 3);
 300:Src/gesture_detection.c **** }
 851              		.loc 1 300 1 view .LVU256
 852 0016 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 853              	.LVL67:
 854              	.L52:
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 24


 291:Src/gesture_detection.c **** 
 855              		.loc 1 291 5 is_stmt 1 view .LVU257
 291:Src/gesture_detection.c **** 
 856              		.loc 1 291 95 is_stmt 0 view .LVU258
 857 0018 2824     		movs	r4, #40
 291:Src/gesture_detection.c **** 
 858              		.loc 1 291 33 view .LVU259
 859 001a 00F50051 		add	r1, r0, #8192
 860              	.LVL68:
 291:Src/gesture_detection.c **** 
 861              		.loc 1 291 33 view .LVU260
 862 001e 91F88050 		ldrb	r5, [r1, #128]	@ zero_extendqisi2
 291:Src/gesture_detection.c **** 
 863              		.loc 1 291 49 view .LVU261
 864 0022 9DF82010 		ldrb	r1, [sp, #32]	@ zero_extendqisi2
 865 0026 6D1A     		subs	r5, r5, r1
 291:Src/gesture_detection.c **** 
 866              		.loc 1 291 71 view .LVU262
 867 0028 2835     		adds	r5, r5, #40
 291:Src/gesture_detection.c **** 
 868              		.loc 1 291 95 view .LVU263
 869 002a 95FBF4F1 		sdiv	r1, r5, r4
 870 002e 04FB1151 		mls	r1, r4, r1, r5
 871              	.LVL69:
 294:Src/gesture_detection.c ****     *current_y = detector->history[keypoint_idx][read_idx].y;
 872              		.loc 1 294 5 is_stmt 1 view .LVU264
 294:Src/gesture_detection.c ****     *current_y = detector->history[keypoint_idx][read_idx].y;
 873              		.loc 1 294 59 is_stmt 0 view .LVU265
 874 0032 7443     		muls	r4, r6, r4
 875 0034 54FA81F4 		uxtab	r4, r4, r1
 876 0038 00EB0414 		add	r4, r0, r4, lsl #4
 877 003c 2568     		ldr	r5, [r4]	@ float
 299:Src/gesture_detection.c **** }
 878              		.loc 1 299 22 view .LVU266
 879 003e C9B2     		uxtb	r1, r1
 294:Src/gesture_detection.c ****     *current_y = detector->history[keypoint_idx][read_idx].y;
 880              		.loc 1 294 16 view .LVU267
 881 0040 1560     		str	r5, [r2]	@ float
 295:Src/gesture_detection.c ****     *current_confidence = detector->history[keypoint_idx][read_idx].confidence;
 882              		.loc 1 295 5 is_stmt 1 view .LVU268
 295:Src/gesture_detection.c ****     *current_confidence = detector->history[keypoint_idx][read_idx].confidence;
 883              		.loc 1 295 59 is_stmt 0 view .LVU269
 884 0042 6268     		ldr	r2, [r4, #4]	@ float
 885              	.LVL70:
 295:Src/gesture_detection.c ****     *current_confidence = detector->history[keypoint_idx][read_idx].confidence;
 886              		.loc 1 295 16 view .LVU270
 887 0044 1A60     		str	r2, [r3]	@ float
 296:Src/gesture_detection.c **** 
 888              		.loc 1 296 5 is_stmt 1 view .LVU271
 296:Src/gesture_detection.c **** 
 889              		.loc 1 296 68 is_stmt 0 view .LVU272
 890 0046 A368     		ldr	r3, [r4, #8]	@ float
 891              	.LVL71:
 299:Src/gesture_detection.c **** }
 892              		.loc 1 299 22 view .LVU273
 893 0048 0322     		movs	r2, #3
 296:Src/gesture_detection.c **** 
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 25


 894              		.loc 1 296 25 view .LVU274
 895 004a 3B60     		str	r3, [r7]	@ float
 299:Src/gesture_detection.c **** }
 896              		.loc 1 299 5 is_stmt 1 view .LVU275
 299:Src/gesture_detection.c **** }
 897              		.loc 1 299 22 is_stmt 0 view .LVU276
 898 004c 4FF42073 		mov	r3, #640
 899 0050 03FB0600 		mla	r0, r3, r6, r0
 900              	.LVL72:
 299:Src/gesture_detection.c **** }
 901              		.loc 1 299 22 view .LVU277
 902 0054 FFF7FEFF 		bl	Gesture_CalculateSpeed
 903              	.LVL73:
 299:Src/gesture_detection.c **** }
 904              		.loc 1 299 22 view .LVU278
 905 0058 10EE101A 		vmov	r1, s0
 906 005c D9E7     		b	.L53
 907              		.cfi_endproc
 908              	.LFE3348:
 910              		.section	.rodata.str1.1,"aMS",%progbits,1
 911              	.LC2:
 912 0000 52696768 		.ascii	"Right Arm Swipe Left\000"
 912      74204172 
 912      6D205377 
 912      69706520 
 912      4C656674 
 913              	.LC3:
 914 0015 52696768 		.ascii	"Right Arm Swipe Right\000"
 914      74204172 
 914      6D205377 
 914      69706520 
 914      52696768 
 915              	.LC4:
 916 002b 4C656674 		.ascii	"Left Arm Swipe Left\000"
 916      2041726D 
 916      20537769 
 916      7065204C 
 916      65667400 
 917              	.LC5:
 918 003f 4C656674 		.ascii	"Left Arm Swipe Right\000"
 918      2041726D 
 918      20537769 
 918      70652052 
 918      69676874 
 919              	.LC6:
 920 0054 426F7468 		.ascii	"Both Arms Raised\000"
 920      2041726D 
 920      73205261 
 920      69736564 
 920      00
 921              	.LC7:
 922 0065 53776F72 		.ascii	"Sword Overhead Strike\000"
 922      64204F76 
 922      65726865 
 922      61642053 
 922      7472696B 
 923              	.LC8:
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 26


 924 007b 53776F72 		.ascii	"Sword Side Slash\000"
 924      64205369 
 924      64652053 
 924      6C617368 
 924      00
 925              		.section	.rodata.CSWTCH.10,"a"
 926              		.align	2
 929              	CSWTCH.10:
 930 0000 00000000 		.word	.LC2
 931 0004 15000000 		.word	.LC3
 932 0008 2B000000 		.word	.LC4
 933 000c 3F000000 		.word	.LC5
 934 0010 54000000 		.word	.LC6
 935 0014 65000000 		.word	.LC7
 936 0018 7B000000 		.word	.LC8
 937              		.text
 938              	.Letext0:
 939              		.file 2 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 940              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 941              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 942              		.file 5 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 943              		.file 6 "../../Middlewares/lib_vision_models_pp/lib_vision_models_pp/Inc/spe_pp_output_if.h"
 944              		.file 7 "Inc/gesture_detection.h"
 945              		.file 8 "../../STM32Cube_FW_N6/Utilities/lcd/../Fonts/fonts.h"
 946              		.file 9 "../../STM32Cube_FW_N6/Utilities/lcd/stm32_lcd.h"
 947              		.file 10 "../../STM32Cube_FW_N6/Drivers/STM32N6xx_HAL_Driver/Inc/stm32n6xx_hal.h"
 948              		.file 11 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltoo
 949              		.file 12 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltoo
 950              		.file 13 "<built-in>"
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 gesture_detection.c
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:26     .text.Gesture_Init:00000000 $t
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:32     .text.Gesture_Init:00000000 Gesture_Init
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:50     .text.Gesture_CalculateDistance:00000000 $t
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:56     .text.Gesture_CalculateDistance:00000000 Gesture_CalculateDistance
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:85     .text.Gesture_CalculateSpeed:00000000 $t
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:91     .text.Gesture_CalculateSpeed:00000000 Gesture_CalculateSpeed
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:170    .text.Gesture_CalculateSpeed:00000058 $d
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:179    .text.Gesture_Detect:00000000 $t
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:185    .text.Gesture_Detect:00000000 Gesture_Detect
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:602    .text.Gesture_Detect:0000021c $d
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:613    .text.Gesture_GetName:00000000 $t
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:619    .text.Gesture_GetName:00000000 Gesture_GetName
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:645    .text.Gesture_GetName:00000014 $d
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:929    .rodata.CSWTCH.10:00000000 CSWTCH.10
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:651    .text.Gesture_GetCurrentDisplayGesture:00000000 $t
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:657    .text.Gesture_GetCurrentDisplayGesture:00000000 Gesture_GetCurrentDisplayGesture
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:697    .text.Gesture_GetKeypointDebugInfo:00000000 $t
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:703    .text.Gesture_GetKeypointDebugInfo:00000000 Gesture_GetKeypointDebugInfo
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:802    .text.Gesture_GetPastKeypointDebugInfo:00000000 $t
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:808    .text.Gesture_GetPastKeypointDebugInfo:00000000 Gesture_GetPastKeypointDebugInfo
C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s:926    .rodata.CSWTCH.10:00000000 $d
                           .group:00000000 wm4.0.edffc6ad2f5eb1e671bbefdf8c481eb3
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.e0c9f337c65cb9f22ed5f23d082bc78b
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_gcc.h.26.7a5fd1a99dbedde687044a4433ab3e15
                           .group:00000000 wm4.newlib.h.7.a37ffbe9e5aff74303f4e60b1cc1c01b
                           .group:00000000 wm4.ieeefp.h.77.bd5feb87d9990dd328793ced294f6a87
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4.string.h.177.59a005921fa78485abc80a0267de5752
                           .group:00000000 wm4.math.h.13.47cfc34cae8a1153323939c4d32cf7c2
                           .group:00000000 wm4.float.h.29.0e9d9baf95ec39f9555dc80c6e28186b
                           .group:00000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:00000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:00000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:00000000 wm4.arm_math_types.h.94.a6c8422e2657ad4cd95bd8be69ba02aa
                           .group:00000000 wm4.stdbool.h.29.c08aa3eec75cf5b9b5003883f43253f0
                           .group:00000000 wm4.arm_mve.h.38.47b22bbd301ce82bc6dafd1a387f65a3
                           .group:00000000 wm4.arm_math_types.h.559.cab78f278b684a3ea2271947c7aea680
                           .group:00000000 wm4.arm_math_memory.h.28.fe8a81c6a9ac13061a5f748732089249
                           .group:00000000 wm4.none.h.185.db055cca83e83f96d8d0bb450fbdf4bb
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 28


                           .group:00000000 wm4.utils.h.27.57524573fe37b04009eecf3582a4c591
                           .group:00000000 wm4.fast_math_functions.h.28.8eb7477260c1d6b62047c49a01c4cbaa
                           .group:00000000 wm4.controller_functions.h.28.7bed7d7a726df2f65b8a3d89cff01247
                           .group:00000000 wm4.filtering_functions.h.46.6cf1424fb1f86d5f9958d208b83340a1
                           .group:00000000 wm4.app_config.h.24.e9b8ad8c27ec31b3b21644fa8513e998
                           .group:00000000 wm4.spe_pp_output_if.h.11.7212d2990e83c8afeadfa97fa05d17c4
                           .group:00000000 wm4.gesture_detection.h.10.d7513471c97a364c41f0081fc9baf7b8
                           .group:00000000 wm4.stm32n6xx_hal_conf.h.21.e6f895f5dec93fd886896ef3aa220611
                           .group:00000000 wm4.arm_cmse.h.103.a0d15a79c4c9a67da8d5831704d7248e
                           .group:00000000 wm4.stm32n6xx.h.34.80585dd08aa426c932f6311fdb7386da
                           .group:00000000 wm4.stm32n657xx.h.26.acd272cb67318cc1a4791ce2f0720ca6
                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm55.h.68.832d5cf835639cc0d28219c3d2867330
                           .group:00000000 wm4.core_cm55.h.196.52e437a270752da561676e507b35baeb
                           .group:00000000 wm4.mpu_armv8.h.32.9d72426c8e2b47753456dcb84802c5b3
                           .group:00000000 wm4.pmu_armv8.h.32.eaa95f88a71b29390b135fd81c071b6b
                           .group:00000000 wm4.core_cm55.h.4411.860dad8650880893dd57b815844f7186
                           .group:00000000 wm4.cachel1_armv7.h.32.abd77761a989e008b0c60891114a33c7
                           .group:00000000 wm4.stm32n657xx.h.575.1c2a5e6bedffc6f9083dcc857bc6d09d
                           .group:00000000 wm4.stm32n6xx.h.114.5cf793d8af485e14f110e3e24bde1aa5
                           .group:00000000 wm4.stm32_hal_legacy.h.22.87fb12bf5a1a1e00fc134f22bc9aa8c4
                           .group:00000000 wm4.stm32n6xx_hal_def.h.63.3a8f01490e8852464e9fcb69092e9c75
                           .group:00000000 wm4.stm32n6xx_ll_bus.h.38.2366a295ee4cdb04833997d3787fcd2d
                           .group:00000000 wm4.stm32n6xx_ll_rcc.h.21.002e22a16fd7f67dde6dce41e8ba9620
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.194.1cb1283e40f9bebcd3fba2a9a961838e
                           .group:00000000 wm4.stm32n6xx_hal_rcc_ex.h.21.79aa32178dfef625fbd20d362449acfa
                           .group:00000000 wm4.stm32n6xx_hal_rcc.h.4359.3f0b7ad33826d95438602c9aebc08af9
                           .group:00000000 wm4.stm32n6xx_hal_gpio.h.21.89d54af663b98eb8fc098192053f7eeb
                           .group:00000000 wm4.stm32n6xx_hal_gpio_ex.h.22.4acb2e3511a98bb48b81cfc8e09fd59e
                           .group:00000000 wm4.stm32n6xx_hal_rif.h.21.424d0bafb874a777dee3742a22e13037
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.21.61e48c5c2e8d25d22177834b232fe45c
                           .group:00000000 wm4.stm32n6xx_hal_dma_ex.h.21.66e597beb090a165329d6ccf665e41bc
                           .group:00000000 wm4.stm32n6xx_hal_dma.h.1020.87e2180c009560b617c1f8208140c950
                           .group:00000000 wm4.stm32n6xx_hal_cortex.h.21.f493623cc58f9454ab4eae41e395c5cc
                           .group:00000000 wm4.stm32n6xx_hal_bsec.h.21.61b309e67dd810e28897a01b1b21a97f
                           .group:00000000 wm4.stm32n6xx_hal_dcmipp.h.21.f538bfd785c6469670251ac9bc7af55d
                           .group:00000000 wm4.stm32n6xx_hal_dma2d.h.21.75c8d46cdbb72970123b3f34ae2043d7
                           .group:00000000 wm4.stm32n6xx_hal_exti.h.21.fda87e715ea6b98239ec30171d1df594
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.21.3f483626ff64c5bf027265bb2e1d1331
                           .group:00000000 wm4.stm32n6xx_hal_i2c_ex.h.21.79e9196c22282cdaf6b4047893638c45
                           .group:00000000 wm4.stm32n6xx_hal_i2c.h.741.1084702632703acc669e4282b3043372
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.21.ae1eb09930e7e550e48e418ac5849e4d
                           .group:00000000 wm4.stm32n6xx_hal_ltdc.h.1002.b13ede7fc94ed5ad1c6768a157d2149a
                           .group:00000000 wm4.stm32n6xx_hal_pwr.h.21.cdb73e4869c3fed3fc84f901ec0e5f0a
                           .group:00000000 wm4.stm32n6xx_hal_pwr_ex.h.21.1a673224a58b0c1e5fad8eeda6514208
                           .group:00000000 wm4.stm32n6xx_hal_ramcfg.h.21.a62dfbb4d2c14e9a8c634a215e37bd3d
                           .group:00000000 wm4.stm32n6xx_hal_uart.h.21.230f549bfa0d5ebfd77bfb311b2aca15
                           .group:00000000 wm4.stm32n6xx_hal_uart_ex.h.21.a0d5511e1d0703b7b5278c8f5472b96d
                           .group:00000000 wm4.stm32n6xx_hal_xspi.h.21.e17898be2073b6b6b19faf30b4e304e9
                           .group:00000000 wm4.stm32n6xx_hal_cacheaxi.h.21.7c3375b7903ec42376e4883320997f74
                           .group:00000000 wm4.stm32n6xx_hal.h.81.5e59143eba07faca3e9aeaa5470826c8
                           .group:00000000 wm4.lcd.h.21.98701c105e66fef2e089854e5bc0fe32
                           .group:00000000 wm4.stm32_lcd.h.55.1a04e503950bf34ef3721d2ebb9542fc
                           .group:00000000 wm4.main.h.30.caab52a0a8de64f9677f2eb568935933

UNDEFINED SYMBOLS
memset
ARM GAS  C:\Users\Antonio\AppData\Local\Temp\ccx8y8GJ.s 			page 29


sqrtf
HAL_GetTick
UTIL_LCD_GetFont
UTIL_LCDEx_PrintfAt
